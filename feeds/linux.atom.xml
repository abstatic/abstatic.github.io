<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Coding Mantis - Linux</title><link href="https://abstatic.github.io/" rel="alternate"></link><link href="https://abstatic.github.io/feeds/linux.atom.xml" rel="self"></link><id>https://abstatic.github.io/</id><updated>2018-10-09T16:42:00+05:30</updated><entry><title>Retiring Pelican</title><link href="https://abstatic.github.io/2018/10/09/retiring-pelican/" rel="alternate"></link><published>2018-10-09T16:42:00+05:30</published><updated>2018-10-09T16:42:00+05:30</updated><author><name>Abhishek Shrivastava (x.abhishek.flyhigh@gmail.com)</name></author><id>tag:abstatic.github.io,2018-10-09:/2018/10/09/retiring-pelican/</id><summary type="html">&lt;p&gt;Moving the blog to&amp;nbsp;Medium&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Tired of Pelican and everything&amp;nbsp;manual&lt;/h3&gt;
&lt;p&gt;I have been using pelican and pelicanyan theme for many years now, but lately
the overhead of maintaining a blog on pelican has become too&amp;nbsp;cumbersome. &lt;/p&gt;
&lt;p&gt;I keep switiching distros around and everytime I have to set it up from
scratch, but that&amp;#8217;s not really an issue as I have become quite used to it.
What bugs me is - its kind of hard to setup proper &lt;span class="caps"&gt;SEO&lt;/span&gt; and comments. For comments I was using disqus but &lt;span class="caps"&gt;SEO&lt;/span&gt; and discoverability of this blog is shit. Also after sometime, having to do everything manually loses its&amp;nbsp;charm.&lt;/p&gt;
&lt;p&gt;I would still be using pelican and my github site as my personal portfolio
where I update my recent projects and whereabouts, but I&amp;#8217;d be moving my blog
on to medium, because that&amp;#8217;s where all the cool kids are, right?&amp;nbsp;haha. &lt;/p&gt;
&lt;p&gt;The medium publication will be &lt;a href="http://medium.com/@abshri"&gt;here&lt;/a&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="pelican"></category><category term="blog"></category></entry><entry><title>Setting up proxies in Linux</title><link href="https://abstatic.github.io/2017/09/07/setting%20proxies/" rel="alternate"></link><published>2017-09-07T03:15:00+05:30</published><updated>2017-09-07T03:15:00+05:30</updated><author><name>Abhishek Shrivastava</name></author><id>tag:abstatic.github.io,2017-09-07:/2017/09/07/setting proxies/</id><summary type="html">&lt;p&gt;This post covers all the points about setting up a manual proxy on a linux distribution that doesn&amp;#8217;t do it&amp;nbsp;automatically.&lt;/p&gt;</summary><content type="html">&lt;p&gt;At times setting up proxy on your linux distribution can be a bit tricky if
you are using distros like Arch, Gentoo which don&amp;#8217;t do it for&amp;nbsp;you.&lt;/p&gt;
&lt;p&gt;This post covers all the different settings that I had to follow to configure proxy
settings on my Arch system with i3 as its window&amp;nbsp;manager.&lt;/p&gt;
&lt;h2&gt;1. &lt;span class="caps"&gt;NM&lt;/span&gt;-Applet&amp;nbsp;Configuration&lt;/h2&gt;
&lt;p&gt;There is a direct option to configure proxy for a network connection in
nm-applet network manager, its pretty straightforward but in my case it didn&amp;#8217;t
work at&amp;nbsp;all.&lt;/p&gt;
&lt;h2&gt;2. Setting up manual proxy in&amp;nbsp;chrome&lt;/h2&gt;
&lt;p&gt;If you are using chrome in non-standard distro then chances are that chrome
will not allow you to define the proxy settings instead it will default to the
system wide proxy settings, but what if your system wide proxy isn&amp;#8217;t working&amp;nbsp;?&lt;/p&gt;
&lt;p&gt;The work around that I found was to use command line arguments to chrome.
Required command line argument here was the one which allows us to specify a location to a &lt;span class="caps"&gt;PAC&lt;/span&gt; file which allows for auto config of all the proxy&amp;nbsp;setting&lt;/p&gt;
&lt;p&gt;A &lt;span class="caps"&gt;PAC&lt;/span&gt;(Proxy Autoconfiguration) file is just a normal file which contains rules
about the proxy that you want to enable. The &lt;span class="caps"&gt;PAC&lt;/span&gt; file used by me&amp;nbsp;is&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;FindProxyForURL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;host&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;shExpMatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;host&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;192.168.*&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;||&lt;/span&gt;  &lt;span class="nx"&gt;shExpMatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;host&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;127.*&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;||&lt;/span&gt;  &lt;span class="nx"&gt;shExpMatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;host&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;localhost&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;||&lt;/span&gt;  &lt;span class="nx"&gt;shExpMatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;host&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;*.iiit.ac.in&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;||&lt;/span&gt;  &lt;span class="nx"&gt;shExpMatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;host&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;10.*&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;||&lt;/span&gt;  &lt;span class="nx"&gt;isPlainHostName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;host&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;||&lt;/span&gt;  &lt;span class="nx"&gt;dnsDomainIs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;host&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;.iiit.ac.in&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;DIRECT&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// You shouldn&amp;#39;t need this, but in some cases it might be handy:&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isInNet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;host&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;10.0.0.0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;255.0.0.0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;DIRECT&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// This uses the Dan&amp;#39;s Guardian port by default, squid if that isn&amp;#39;t&lt;/span&gt;
&lt;span class="c1"&gt;// working, and direct if that isn&amp;#39;t working.  On my network, i don&amp;#39;t&lt;/span&gt;
&lt;span class="c1"&gt;// use DIRECT, because i block outgoing access in the firewall.&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;PROXY proxy.iiit.ac.in:8080; DIRECT&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So I needed to launch chrome by using the&amp;nbsp;command-  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;google-chrome-stable --proxy-pac-url=http://proxy.iiit.ac.in/proxy.pac&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Way too verbose. I wanted to find a way via which I could launch chrome with
this flag&amp;nbsp;normally. &lt;/p&gt;
&lt;p&gt;The fix was to copy the bash script which actually executes chrome, by default
you can find it using &lt;code&gt;which&lt;/code&gt; command. After that you will find a line
containing &lt;code&gt;exec&lt;/code&gt; command, you need to modify it so that it looks&amp;nbsp;like-&lt;/p&gt;
&lt;p&gt;&lt;code&gt;exec /opt/google/chrome/google-chrome $CHROME_USER_FLAGS "--proxy-pac-url=http://proxy.iiit.ac.in/proxy.pac"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;So I just copied the default &lt;code&gt;google-chrome-stable&lt;/code&gt; executable bash script to
a new file named &lt;code&gt;chrome-iiit&lt;/code&gt; and that was&amp;nbsp;it.&lt;/p&gt;
&lt;h2&gt;3. Setting up proxy inside the&amp;nbsp;terminal&lt;/h2&gt;
&lt;p&gt;If you are not using a system wide proxy then you also need to setup proxy for
all the connections that you might make from inside of your terminal. This was
easy I only needed to add a couple of environment variables into my .bashrc to
make it work. The changes were as&amp;nbsp;follows-&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;## CONTENT FOR IIIT H PROXY
export http_proxy=http://proxy.iiit.ac.in:8080/
export https_proxy=$http_proxy
export ftp_proxy=$http_proxy
export rsync_proxy=$http_proxy
export ssh_proxy=$http_proxy
export no_proxy=&amp;quot;localhost, 127.0.0.1, *iiit.ac.in, *iiit.net, 172.16.*.*, 172.17.*.*, 192.168.*.*, 10.*.*.*&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You might need to replace the value of variables by your own proxy &lt;span class="caps"&gt;URL&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Setting up proxy for&amp;nbsp;sudo&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The above changes will allow you to define proxy for all commands that you
execute with user-level priveleges. But, if you try to execute any program
which requires you to use root access or sudo(substitute user do) then you
won&amp;#8217;t be able to. For this you need to add an additional line to your
&lt;code&gt;sudoers&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;Please edit the sudoers file using &lt;code&gt;sudo visudo&lt;/code&gt; command&amp;nbsp;only!&lt;/p&gt;
&lt;p&gt;Inside the sudoers file I only had to add an additional line to modify the
defualt &lt;code&gt;env_variables&lt;/code&gt; so that it also includes &lt;code&gt;$http_proxy&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;### changes for IIIT H proxy
Defaults env_keep += &amp;quot;https_proxy http_proxy&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;4. Setting up proxy for&amp;nbsp;pacman&lt;/h2&gt;
&lt;p&gt;This was something that I didn&amp;#8217;t expect that I would need to do. But as it
turns out, arch also expects you to manually configure proxy settings for
Pacman(arch package manager) as well. This was also not&amp;nbsp;hard.&lt;/p&gt;
&lt;p&gt;After a bit of googling the solution was to modify the pacman config file
at &lt;code&gt;/etc/pacman.conf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Near lines 20-ish you will find an entry name &lt;code&gt;XferCommand&lt;/code&gt; you need to modify
it so that it looks like -
&lt;code&gt;XferCommand = /usr/bin/wget --passive-ftp --proxy=on -c -O %o %u&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You might notice that we are making a call to wget, so its natural that we
modify the config file for wget and set proxy values there too. The default
wget config file is at &lt;code&gt;/etc/wgetrc&lt;/code&gt; &lt;/p&gt;
&lt;p&gt;Find the lines containing &lt;code&gt;https_proxy http_proxy use_proxy&lt;/code&gt; variables,
uncomment them and add the correct&amp;nbsp;values&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# You can set the default proxies for Wget to use for http, https, and ftp.
# They will override the value in the environment.
https_proxy = http://proxy.iiit.ac.in:8080
http_proxy = http://proxy.iiit.ac.in:8080
ftp_proxy = http://proxy.iiit.ac.in:8080

# If you do not want to use proxy at all, set this to off.
use_proxy = on
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In case you want to setup proxy iniside Firefox webbrowser, you just go to
Advanced Settings -&amp;gt; Network and then set the manual proxy&amp;nbsp;values&lt;/p&gt;
&lt;p&gt;Phew, and that&amp;#8217;s it folks! This is all the different stuff that happens when
you use system wide proxy&amp;nbsp;configuration.&lt;/p&gt;</content><category term="Linux"></category><category term="proxy"></category><category term="arch"></category><category term="bash"></category><category term="i3"></category><category term="i3wm"></category></entry><entry><title>Setting up autolock on i3</title><link href="https://abstatic.github.io/2017/07/05/xautolock-linux/" rel="alternate"></link><published>2017-07-05T22:17:00+05:30</published><updated>2017-07-05T22:17:00+05:30</updated><author><name>Abhishek Shrivastava (x.abhishek.flyhigh@gmail.com)</name></author><id>tag:abstatic.github.io,2017-07-05:/2017/07/05/xautolock-linux/</id><summary type="html">&lt;p&gt;How to setup auto screen lock on i3 and Arch&amp;nbsp;Linux&lt;/p&gt;</summary><content type="html">&lt;p&gt;i3wm comes with a very nice screenlock called &lt;code&gt;i3lock&lt;/code&gt; but as you might expect every thing is trimmed down and looks quite ugly by default. Also, it doesn&amp;#8217;t have the feature of auto screen locking which I always felt is&amp;nbsp;vital.&lt;/p&gt;
&lt;p&gt;One funny morning I decided to look on the internet how people have modified the lock&amp;nbsp;screens.&lt;/p&gt;
&lt;p&gt;Here is the screenshot of my locked display&amp;nbsp;-&lt;/p&gt;
&lt;p&gt;&lt;img alt="Screenlocked" src="http://i.imgur.com/PLTX59E.png"&gt;&lt;/p&gt;
&lt;p&gt;Looks cool, right ? Basically its the screenshot of whatever I am working on and after that I pixelate the screenshot by about&amp;nbsp;10%&lt;/p&gt;
&lt;p&gt;For doing this I have a handy bash script which does the job pretty well. Below script takes the screenshot, stores it in &lt;code&gt;/tmp&lt;/code&gt; and then creates another image which is pixellated by 10% for privacy reasons. This script also turns the display off after some time of&amp;nbsp;inactivity.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#~/bin/sh -e

#fuzzylock.sh

# take a screenshot
scrot /tmp/screen_locked.png

# pixelate it 10x
mogrify -scale 10% -scale 1000% /tmp/screen_locked.png

# lock screen displaying this image
i3lock -i /tmp/screen_locked.png

# Turn off the screen after a delay
sleep 60; pgrep i3lock &amp;amp;&amp;amp; xset dpms force off
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;span class="caps"&gt;EDIT&lt;/span&gt; - One obvious bug is that it doesn&amp;#8217;t delete the original screenshot taken which is stored in &lt;code&gt;/tmp&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Package &lt;code&gt;scrot&lt;/code&gt; generally comes installed by default on most distros and is available in almost all of the repos. &lt;code&gt;mogrify&lt;/code&gt; program is part of ImageMagick which you will need to&amp;nbsp;install.&lt;/p&gt;
&lt;p&gt;Now we want this script to get executed manually and automatically as well after some time, for this I installed &lt;code&gt;xautolock&lt;/code&gt; , configuring &lt;code&gt;xautolock&lt;/code&gt; is pretty&amp;nbsp;straightforward. &lt;/p&gt;
&lt;p&gt;I added the following couple of lines in my i3 config file&amp;nbsp;-&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# for automatic screenlocking
bindsym $mod+q exec &amp;quot;~/dev/fuzzylock.sh&amp;quot;
exec xautolock -time 15 -locker &amp;quot;~/dev/fuzzylock.sh&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The time parameter takes the time in minutes before executing the script. While the first line defines a custom shortcut for executing the&amp;nbsp;script.&lt;/p&gt;
&lt;p&gt;That&amp;#8217;s it for now. Next post will be about configuring proxies and 802.1x authentication on Arch Linux and a neat hack for making it work with google chrome. Happy&amp;nbsp;Learning!&lt;/p&gt;</content><category term="Linux"></category><category term="open source"></category><category term="i3wm"></category><category term="xautolock"></category></entry><entry><title>Configuring touchpads on linux</title><link href="https://abstatic.github.io/2017/07/05/touchpads-linux/" rel="alternate"></link><published>2017-07-05T21:17:00+05:30</published><updated>2017-07-05T21:17:00+05:30</updated><author><name>Abhishek Shrivastava (x.abhishek.flyhigh@gmail.com)</name></author><id>tag:abstatic.github.io,2017-07-05:/2017/07/05/touchpads-linux/</id><summary type="html">&lt;p&gt;How to manually configure touchpads on&amp;nbsp;linux&lt;/p&gt;</summary><content type="html">&lt;p&gt;So, after recently installing arch linux on my machine I had to reconfigure how my touchpad works. By defualt on most linux distros (i3, mate, awesome) things like multi touch, tap to touch are&amp;nbsp;disabled.&lt;/p&gt;
&lt;p&gt;I referred the &lt;a href="https://wiki.archlinux.org/index.php/Touchpad_Synaptics"&gt;Arch Wiki&lt;/a&gt; for figuring out how to configure various touchpad&amp;nbsp;configurations.&lt;/p&gt;
&lt;p&gt;First, I used &lt;code&gt;xinput list&lt;/code&gt; command to find out what is the name of my touchpad. After this I installed the package &lt;code&gt;xf86-input-synaptics&lt;/code&gt;. This package is available by default on Arch Repo. I must warn you that this package is no longer actively maintained, modern desktop environments like &lt;span class="caps"&gt;KDE&lt;/span&gt;, Gnome rely on &lt;code&gt;libinput&lt;/code&gt; , still &lt;code&gt;xf86-input-synaptics&lt;/code&gt; is pretty stable and works in most of the&amp;nbsp;cases.&lt;/p&gt;
&lt;h3&gt;The configuration&amp;nbsp;file&lt;/h3&gt;
&lt;p&gt;Generally the configuration file is located in &lt;code&gt;/etc/X11/xorg.conf.d/70-synaptics.conf&lt;/code&gt; , if it doesn&amp;#8217;t exist then create it. You will need super user priveleges for editing/creating the&amp;nbsp;file.&lt;/p&gt;
&lt;p&gt;Syntax is &lt;code&gt;Option "&amp;lt;option name&amp;gt;" "&amp;lt;option value&amp;gt;"&lt;/code&gt;
&lt;span class="dquo"&gt;&amp;#8220;&lt;/span&gt;1&amp;#8221; is for Mouse button 1, that&amp;#8217;s left click
&amp;#8220;2&amp;#8221; is for Mouse button 2, that&amp;#8217;s middle click
&amp;#8220;3&amp;#8221; is for Mouse button 3, that&amp;#8217;s right&amp;nbsp;click&lt;/p&gt;
&lt;h4&gt;My&amp;nbsp;configuration&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Section &amp;quot;InputClass&amp;quot;
    Identifier &amp;quot;touchpad&amp;quot;
    Driver &amp;quot;synaptics&amp;quot;
    MatchIsTouchpad &amp;quot;on&amp;quot;
        Option &amp;quot;TapButton1&amp;quot; &amp;quot;1&amp;quot;
        Option &amp;quot;TapButton2&amp;quot; &amp;quot;3&amp;quot;
        Option &amp;quot;TapButton3&amp;quot; &amp;quot;2&amp;quot;
        Option &amp;quot;RBCornerButton&amp;quot; &amp;quot;3&amp;quot;
        Option &amp;quot;VertEdgeScroll&amp;quot; &amp;quot;on&amp;quot;
        Option &amp;quot;VertTwoFingerScroll&amp;quot; &amp;quot;on&amp;quot;
        Option &amp;quot;HorizEdgeScroll&amp;quot; &amp;quot;on&amp;quot;
        Option &amp;quot;HorizTwoFingerScroll&amp;quot; &amp;quot;on&amp;quot;
        Option &amp;quot;CircularScrolling&amp;quot; &amp;quot;on&amp;quot;
        Option &amp;quot;CircScrollTrigger&amp;quot; &amp;quot;2&amp;quot;
        Option &amp;quot;EmulateTwoFingerMinZ&amp;quot; &amp;quot;40&amp;quot;
        Option &amp;quot;EmulateTwoFingerMinW&amp;quot; &amp;quot;8&amp;quot;
        Option &amp;quot;CoastingSpeed&amp;quot; &amp;quot;0&amp;quot;
        Option &amp;quot;FingerLow&amp;quot; &amp;quot;30&amp;quot;
        Option &amp;quot;FingerHigh&amp;quot; &amp;quot;50&amp;quot;
        Option &amp;quot;MaxTapTime&amp;quot; &amp;quot;125&amp;quot;
EndSection
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Lets go over some interesting&amp;nbsp;entries-&lt;/p&gt;
&lt;h5&gt;TapButton1&lt;/h5&gt;
&lt;p&gt;(integer) configures which mouse-button is reported on a non-corner, one finger&amp;nbsp;tap.&lt;/p&gt;
&lt;h5&gt;TapButton2&lt;/h5&gt;
&lt;p&gt;(integer) configures which mouse-button is reported on a non-corner, two finger&amp;nbsp;tap&lt;/p&gt;
&lt;h5&gt;TapButton3&lt;/h5&gt;
&lt;p&gt;(integer) configures which mouse-button is reported on a non-corner, three finger&amp;nbsp;tap&lt;/p&gt;
&lt;h5&gt;RBCornerButton&lt;/h5&gt;
&lt;p&gt;(integer) configures which mouse-button is reported on a right bottom corner, one finger tap (use Option &amp;#8220;RBCornerButton&amp;#8221; &amp;#8220;3&amp;#8221; to achieve Ubuntu style tap behaviour for right mouse button in lower right&amp;nbsp;corner)&lt;/p&gt;
&lt;h5&gt;VertEdgeScroll&lt;/h5&gt;
&lt;p&gt;(boolean) enables vertical scrolling while dragging across the right edge of the touch&amp;nbsp;pad.&lt;/p&gt;
&lt;h5&gt;HorizEdgeScroll&lt;/h5&gt;
&lt;p&gt;(boolean) enables horizontal scrolling while dragging across the bottom edge of the touch&amp;nbsp;pad.&lt;/p&gt;
&lt;h5&gt;VertTwoFingerScroll&lt;/h5&gt;
&lt;p&gt;(boolean) enables vertical scrolling using two&amp;nbsp;fingers.&lt;/p&gt;
&lt;h5&gt;HorizTwoFingerScroll&lt;/h5&gt;
&lt;p&gt;(boolean) enables horizontal scrolling using two&amp;nbsp;fingers.&lt;/p&gt;
&lt;p&gt;After editing the configuration file the next you will have to restart for your settings to take effect.
You can also check if a certain setting works using &lt;code&gt;synclient&lt;/code&gt; which will get installed with the &lt;code&gt;xf86-input-synaptics&lt;/code&gt; package. More details &lt;a href="https://wiki.archlinux.org/index.php/Touchpad_Synaptics#Synclient"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comment below if you face any&amp;nbsp;issues.&lt;/p&gt;</content><category term="Linux"></category><category term="open source"></category><category term="touchpad"></category><category term="synaptics"></category></entry><entry><title>DGPLUG Summer Training</title><link href="https://abstatic.github.io/2016/06/27/dgplug-summer-training/" rel="alternate"></link><published>2016-06-27T16:42:00+05:30</published><updated>2016-06-27T16:42:00+05:30</updated><author><name>Abhishek Shrivastava (x.abhishek.flyhigh@gmail.com)</name></author><id>tag:abstatic.github.io,2016-06-27:/2016/06/27/dgplug-summer-training/</id><summary type="html">&lt;p&gt;My experiences till now with &lt;span class="caps"&gt;DGPLUG&lt;/span&gt; summer&amp;nbsp;training&lt;/p&gt;</summary><content type="html">&lt;h3&gt;What is a &lt;span class="caps"&gt;LUG&lt;/span&gt; and &lt;span class="caps"&gt;DGPLUG&lt;/span&gt;&amp;nbsp;?&lt;/h3&gt;
&lt;p&gt;&lt;span class="caps"&gt;LUG&lt;/span&gt; is a often used term in computer communities. It stands for &amp;#8220;Linux Users
Group&amp;#8221; , &lt;a href="https://dgplug.org/"&gt;&lt;span class="caps"&gt;DGPLUG&lt;/span&gt;&lt;/a&gt; stands for &amp;#8220;Linux Users&amp;#8217; Group of&amp;nbsp;Durgapur&amp;#8221; &lt;/p&gt;
&lt;p&gt;Check out their website for more information about the community. Every year
&lt;a href="https://dgplug.org/"&gt;&lt;span class="caps"&gt;DGPLUG&lt;/span&gt;&lt;/a&gt; conducts 
a &lt;a href="https://dgplug.org/summertraining16.html"&gt;summer training&lt;/a&gt; program every 
year, to further increase open source development. Its free and anyone from 
anywhere can join&amp;nbsp;in!&lt;/p&gt;
&lt;h3&gt;How I came to know about &lt;span class="caps"&gt;DGPLUG&lt;/span&gt;&amp;nbsp;?&lt;/h3&gt;
&lt;p&gt;Well, it was through PyCon India. I was going through the past blog posts
about pycon and read about this group &amp;#8220;which meets every year by the stairs&amp;#8221;
, it piqued my interest and I did some googling. And here I am now, part of
their summer training&amp;nbsp;program.&lt;/p&gt;
&lt;h3&gt;The&amp;nbsp;team&lt;/h3&gt;
&lt;p&gt;Our sessions are genearlly handled by senior members of the community. I feel
so lucky to get hands on training from them, I mean who on earth gets the
opportunity to train with actual software engineers from fedora, redhat !!
Being a linux and redhat fanboy, its like a dream come&amp;nbsp;true.&lt;/p&gt;
&lt;h3&gt;My Experience Till&amp;nbsp;Now&lt;/h3&gt;
&lt;p&gt;Pre-requisites - Although there are no pre-requisites as such for the training
but we are expected to go through past years&amp;#8217; &lt;a href="https://dgplug.org/irclogs/"&gt;irc logs&lt;/a&gt;.
In case a student misses a session he can also follow along in the
&lt;a href="https://dgplug.org/irclogs/"&gt;logs&lt;/a&gt;.1&lt;/p&gt;
&lt;p&gt;Almost 2 weeks of training have passed and I must say it is awesome. We have
regular session or &amp;#8220;classes&amp;#8221; everyday at 18:30 &lt;span class="caps"&gt;IST&lt;/span&gt; on #dgplug at freenode (Funny, address right ?). 
I really like the class structure, it almost feels like being in a real 
classroom. We have this roll call thing where all of us call out their names
and give their&amp;nbsp;attendance.&lt;/p&gt;
&lt;p&gt;After the usual roll call, the session proceeds, first we discuss any doubts
or questions from the previous class and after that we discusss and read up on
a new topic. So far we have learnt about&amp;nbsp;- &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How to use &lt;span class="caps"&gt;IRC&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Mailing and Chat&amp;nbsp;Etiquettes&lt;/li&gt;
&lt;li&gt;How to ask questions and use&amp;nbsp;google.&lt;/li&gt;
&lt;li&gt;Basic Shell Command&amp;nbsp;Usage&lt;/li&gt;
&lt;li&gt;Linux Filesystem&amp;nbsp;Hierarchy&lt;/li&gt;
&lt;li&gt;Using command line text editor &lt;span class="caps"&gt;VIM&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;RST&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Documentation using&amp;nbsp;sphinx&lt;/li&gt;
&lt;li&gt;Blogging&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Although I was already familiar with most of these, but inspite of that
I learnt many new things, especially about sphinx and documentation in python.
Moreover, this training is about making you an &amp;#8220;open source contributor&amp;#8221; which
I have wanted to be for a long&amp;nbsp;time. &lt;/p&gt;
&lt;p&gt;Apart from that, I have gotten to meet and communicate with so many smart people,
with which normally I wouldn&amp;#8217;t have ever known. Infact, most of the regular
previous years&amp;#8217; participants are now good software engineers in various big
firms. So, that doesn&amp;#8217;t hurt as&amp;nbsp;well. &lt;/p&gt;
&lt;p&gt;The best part till now which I have found is the community. It feels really
good to be a part of open source community, where the main aim is to &amp;#8220;learn
and&amp;nbsp;share&amp;#8221;. &lt;/p&gt;
&lt;p&gt;Hoping that after this summer training, I will become a regular open source
contributor to something linux related (Again, once a fanboy, always a fanboy&amp;nbsp;:P)&lt;/p&gt;</content><category term="Linux"></category><category term="dgplug"></category><category term="open source"></category><category term="foss"></category></entry><entry><title>Linux Proc Pseudo Filesystem</title><link href="https://abstatic.github.io/2016/06/24/linux-proc-fs/" rel="alternate"></link><published>2016-06-24T14:09:00+05:30</published><updated>2016-06-24T14:09:00+05:30</updated><author><name>Abhishek Shrivastava</name></author><id>tag:abstatic.github.io,2016-06-24:/2016/06/24/linux-proc-fs/</id><summary type="html">&lt;p&gt;Some useful information about&amp;nbsp;/proc/&lt;/p&gt;</summary><content type="html">&lt;h2&gt;The proc&amp;nbsp;directory&lt;/h2&gt;
&lt;p&gt;Proc stands for process in linux. As we know, that &amp;#8220;Everything is a file&amp;#8221; in
linux. Keeping true to this analogy, all the processes are organized and
processed inside the proc&amp;nbsp;directory.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/proc/&lt;/code&gt; is the process information and pseudo filesystem. All the running
processes have their directories inside the proc folder. The general syntax of
directories is &lt;code&gt;/proc/[pid]&lt;/code&gt; , You can easily find the &lt;code&gt;pid&lt;/code&gt; of a running
process by a simple &lt;code&gt;ps -A | grep &amp;lt;process_name&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;File&amp;nbsp;descriptors&lt;/h2&gt;
&lt;p&gt;Each running process can have multiple file descriptors. All of the active
file descriptors can be found at &lt;code&gt;/proc/[pid]/fd&lt;/code&gt; folder. &lt;/p&gt;
&lt;p&gt;This subdirectory contains one entry for each file which the process has open,
named by its file descriptor, and which is a sym link to the actual&amp;nbsp;file.&lt;/p&gt;
&lt;p&gt;If you do a &lt;code&gt;ls -l&lt;/code&gt; in the directory you will receive something similar&amp;nbsp;- &lt;/p&gt;
&lt;p&gt;&lt;img alt="Screenshot" src="http://i.imgur.com/pyYMx7D.png"&gt;&lt;/p&gt;
&lt;p&gt;In linux, all the file descriptors are numbered.  0, 1, 2 are the reserved
file descriptors for &lt;span class="caps"&gt;STDIN&lt;/span&gt;, &lt;span class="caps"&gt;STDOUT&lt;/span&gt;, &lt;span class="caps"&gt;STDERR&lt;/span&gt;&amp;nbsp;recpectively.&lt;/p&gt;
&lt;p&gt;In the above screenshot, we can observe that file descriptor 14 points to the
current music file that is being played. \&amp;lt;the proces is the vlc media player&gt;&lt;/p&gt;
&lt;p&gt;There is one more interesting directory related to file descriptors of the
process it is&amp;nbsp;-&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;/proc/[pid]/fdinfo/&lt;/code&gt;&lt;/strong&gt; - This subdirectory contains one entry for each of
the file descriptors of the process. The files contains the position of the
file descriptor and the flags with which the file has been&amp;nbsp;opened&lt;/p&gt;
&lt;h2&gt;Other interesting findings&amp;nbsp;-&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;/proc/[pid]/exe&lt;/code&gt;&lt;/strong&gt; - This symlinks to the executable file of the&amp;nbsp;process.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;/proc/[pid]/environ&lt;/code&gt;&lt;/strong&gt; - This file contains all the environment variables
that are available to the process. Best way to see it is using the strings
program. &lt;code&gt;strings environ&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;/proc/[pid]/cwd&lt;/code&gt;&lt;/strong&gt; - It points to the current working directory of the
process. Symlink to the current working&amp;nbsp;directory.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;/proc/[pid]/io&lt;/code&gt;&lt;/strong&gt; - Contains all the I/O stats for the process. Like how
many bytes the process has read, written, number of syscalls&amp;nbsp;etc.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;/proc/[pid]/oom_score&lt;/code&gt;&lt;/strong&gt; - Linux kernel has a thing called &amp;#8220;Out Of Memory&amp;#8221;
killer. &lt;span class="caps"&gt;OOM&lt;/span&gt; killer kills a process in case the system is running out of
memory. Higher the &lt;span class="caps"&gt;OOM&lt;/span&gt; score of a process, higher is the likelihood that it
will be killed by the&amp;nbsp;kernel. &lt;/p&gt;
&lt;p&gt;The &lt;span class="caps"&gt;OOM&lt;/span&gt; score of a process is calculated on basis of what percentage of memory
the process is using. The &lt;span class="caps"&gt;OOM&lt;/span&gt; score can vary between -16 to +15. Score of -17
means that the process cannot be killed by &lt;span class="caps"&gt;OOM&lt;/span&gt;&amp;nbsp;killer.&lt;/p&gt;
&lt;p&gt;That is all, although far from complete. &lt;code&gt;/proc/&lt;/code&gt; contains tons of information
about the system, which I did not found as&amp;nbsp;relevant.&lt;/p&gt;</content><category term="Linux"></category><category term="proc"></category><category term="filesystem"></category><category term="pseudo filesystem"></category></entry><entry><title>Linux Strings Program</title><link href="https://abstatic.github.io/2016/06/24/strings%20program/" rel="alternate"></link><published>2016-06-24T01:15:00+05:30</published><updated>2016-06-24T01:15:00+05:30</updated><author><name>Abhishek Shrivastava</name></author><id>tag:abstatic.github.io,2016-06-24:/2016/06/24/strings program/</id><summary type="html">&lt;p&gt;Strings program for reading all those ineligible&amp;nbsp;files&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Strings&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;strings&lt;/code&gt; is a command line tool to read files. On regular files its function
is same as less, more, or cat for that&amp;nbsp;matter.&lt;/p&gt;
&lt;p&gt;But as per the man page-
&lt;code&gt;strings prints the strings of printable character in files&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I feel like this progarm is godsend. With help of strings we can easily read
files, which regular editors like vim, less fail to&amp;nbsp;parse. &lt;/p&gt;
&lt;p&gt;Strings takes in the files, and scoures through it and prints out all the
characters which can be parsed as string. On finding any non printable
character the line is terminated. A new line is started from the next&amp;nbsp;string.&lt;/p&gt;
&lt;p&gt;Try parsing the &lt;code&gt;/proc/[pid]/environ&lt;/code&gt; file with help of cat, vim or less and
then with strings, you will realize what the program is made&amp;nbsp;for. &lt;/p&gt;</content><category term="Linux"></category><category term="strings"></category><category term="bash"></category><category term="shell"></category></entry><entry><title>Dotfiles</title><link href="https://abstatic.github.io/2016/01/27/dotfiles/" rel="alternate"></link><published>2016-01-27T16:10:00+05:30</published><updated>2016-01-27T16:10:00+05:30</updated><author><name>Abhishek Shrivastava (noreply@blogger.com)</name></author><id>tag:abstatic.github.io,2016-01-27:/2016/01/27/dotfiles/</id><summary type="html">&lt;div dir="ltr" style="text-align: left;"&gt;

Dotfiles are vital to any developer configuration. Currently I am
setting up all of my dotfiles for a linux fedora configuration. After I
am done, I will upload all of these to a github repository.  

First is Vim  

For my vim configuration I use a ton of plugins, most of …&lt;/div&gt;</summary><content type="html">&lt;div dir="ltr" style="text-align: left;"&gt;

Dotfiles are vital to any developer configuration. Currently I am
setting up all of my dotfiles for a linux fedora configuration. After I
am done, I will upload all of these to a github repository.  

First is Vim  

For my vim configuration I use a ton of plugins, most of which are
gathered from here and there.  

For plugin management I use pathogen, couldn&amp;#8217;t find anything easier.  
Coupled with NERDTree , syntastic, and git gutter this setup is pretty
ideal to me.

&lt;/div&gt;

&lt;/p&gt;</content></entry><entry><title>DNF Configuration</title><link href="https://abstatic.github.io/2015/09/04/dnf-configuration/" rel="alternate"></link><published>2015-09-04T20:56:00+05:30</published><updated>2015-09-04T20:56:00+05:30</updated><author><name>Abhishek Shrivastava (noreply@blogger.com)</name></author><id>tag:abstatic.github.io,2015-09-04:/2015/09/04/dnf-configuration/</id><summary type="html">&lt;p&gt;dnf is Fedora&amp;#8217;s default package manager now. This post is about exploring various dnf options and then arriving at a usable&amp;nbsp;configuration.&lt;/p&gt;</summary><content type="html">&lt;p&gt;With arrival of Fedora 22, dnf has become the distro&amp;#8217;s default package manager, by
replacing legacy yum package manager. For those of you who didn&amp;#8217;t know, dnf has been part of Fedora all the way back from Fedora 18.&lt;br&gt;
dnf has been proven to be faster than yum, and is better and faster in handling&amp;nbsp;dependencies.  &lt;/p&gt;
&lt;p&gt;Configuration of dnf&amp;nbsp;:&lt;/p&gt;
&lt;p&gt;&lt;span class="caps"&gt;TBH&lt;/span&gt;, I find the default configuration of dnf pretty horrendous. So, I took the time to go through the documentation and configure a optimum
dnf config file applicable to anyone, the dnf config file can be found
at &lt;em&gt;/etc/dnf/dnf.conf&lt;/em&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. clean_requirements_on_remove:&lt;/strong&gt; Use this option if you want to
delete unused dependencies when&lt;br&gt;
you run dnf&amp;nbsp;remove.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    e.g. clean_requirements_on_remove=true
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;2. debuglevel:&lt;/strong&gt; Use this when you want to have more of debug data printed out to stdout, when any transaction&amp;nbsp;fails.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    e.g. debuglevel=2 (range of 0-10)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;3. keepcache:&lt;/strong&gt; We definitely need this value set to true. This value was set to true by default in yum.
Basically what it does, is it preserves your downloaded packages if, in case your transaction fails or quits due to connectivity&amp;nbsp;issues.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    e.g. keepcache=true
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you start to run out of data due to cache you can just sudo in and delete all the cache data, its&amp;nbsp;harmless.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. deltarpm:&lt;/strong&gt; Delta &lt;span class="caps"&gt;RPM&lt;/span&gt; packages contain the difference between an old and a new
version of an &lt;span class="caps"&gt;RPM&lt;/span&gt; package. Applying a delta &lt;span class="caps"&gt;RPM&lt;/span&gt; on an old &lt;span class="caps"&gt;RPM&lt;/span&gt; results in the complete new &lt;span class="caps"&gt;RPM&lt;/span&gt;.
 Always set to true. Using delta &lt;span class="caps"&gt;RPM&lt;/span&gt; takes &lt;span class="caps"&gt;CPU&lt;/span&gt; and I/O cycles&amp;nbsp;though.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    e.g. deltarpm=true
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;5. metadata_expire:&lt;/strong&gt; Set to -1 as I don&amp;#8217;t live on the bleeding edge and
don&amp;#8217;t want to download 20-30Mb of metadata everytime I want to install a package. Another
alternative to this is to use the command line flag -C while executing dnf, this will force dnf to use the system 
cache even if the metadata is&amp;nbsp;expired.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    e.g. metadata_expire=-1 (-1 for never or time in seconds for between expirations)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;6. fastestmirror:&lt;/strong&gt; Set to true to override the repo default metrics and prefer the fastest mirror&amp;nbsp;first.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    e.g. fastestmirror=true
&lt;/pre&gt;&lt;/div&gt;</content><category term="computers"></category><category term="configuration"></category><category term="dnf"></category><category term="Fedora"></category><category term="Linux"></category></entry><entry><title>Moving to a remote work environment: Motivation</title><link href="https://abstatic.github.io/2015/08/30/moving-to-a-remote-work-environment-motivation/" rel="alternate"></link><published>2015-08-30T08:17:00+05:30</published><updated>2015-08-30T08:17:00+05:30</updated><author><name>Abhishek Shrivastava</name></author><id>tag:abstatic.github.io,2015-08-30:/2015/08/30/moving-to-a-remote-work-environment-motivation/</id><summary type="html">&lt;p&gt;Why developers must have a  portable development environment&amp;nbsp;?&lt;/p&gt;</summary><content type="html">&lt;p&gt;How many times has this happened to you&amp;nbsp;-  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span&gt;Your system crashed and all of your configuration that you
    spent nights setting up was also - &lt;em&gt;gone&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;You were trying to install a new &lt;span class="caps"&gt;OS&lt;/span&gt;, (probably a new flavor of
    linux), you had to setup your dev env all over again. Its a real
    nightmare installing all those libraries, dlls, and what&amp;nbsp;not!&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;You are in a remote area, and you have to do some urgent work
    or code modification, but you just can&amp;#8217;t work without your dev&amp;nbsp;environment.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;We all spend countless hours in setting up our development env
just right and its really annoying to set it up all over again. Imagine
it would have been so much easier if your dev env was portable and all
you had to do was either ssh into it or deploy the &lt;span class="caps"&gt;VM&lt;/span&gt; and that&amp;#8217;s it. You
are ready.&lt;/span&gt;&lt;br&gt;
&lt;span&gt;After my recent fiasco (read as System function failing miserably)
with Windows I have decided that I really need a remote work environment
which is independent of the client that I am operating upon.&lt;/span&gt;&lt;br&gt;
&lt;span&gt;&lt;/span&gt;&lt;br&gt;
&lt;span&gt;I have tried to create a remote and portable development
environment but everytime I got sidetracked. But none of that this time.
Losing a ideal development environment is really a nightmare and it
takes nearly days to set it all up again.&lt;/span&gt;&lt;br&gt;
&lt;span&gt;&lt;br&gt;
&lt;/span&gt;&lt;span&gt;So, after scouring the internet for days I have developed a
roadmap for working with remotes and nurturing my own remote and
protable development environment. In the coming series of article I am
going to share with you all the procedures and software that I am going
to use to initialize my development environment. &lt;/span&gt;&lt;br&gt;
&lt;span&gt;&lt;br&gt;
&lt;/span&gt;&lt;span&gt;First up is is working with remotes. As part of my
internship at &lt;a href="http://www.techshanty.com/"&gt;TechShanty&lt;/a&gt; I have constant
access to a DigitalOcean &lt;span class="caps"&gt;VM&lt;/span&gt;. I have decided to utilize this remote as
much as possible. I will be setting up a apache server, terminal
multiplexing and user access level for everyone using it.&lt;/span&gt;&lt;br&gt;
&lt;span&gt;&lt;br&gt;
&lt;/span&gt;&lt;span&gt;Next will be setting up my own portable development
environment. I haven&amp;#8217;t yet decided on whether I want a headless env or
full &lt;span class="caps"&gt;GUI&lt;/span&gt;. For making my development environment portable I will use
virtual machines. I have shortlisted (but haven&amp;#8217;t yet tested) two
machines for this purpose. First is, &lt;span class="caps"&gt;CS50&lt;/span&gt; Appliance 19 based on Ubuntu
and second is the appliance that I am using in &lt;span class="caps"&gt;CS162&lt;/span&gt; which is again
based on&amp;nbsp;Ubuntu. &lt;/span&gt;  &lt;/p&gt;
&lt;p&gt;Technologies that I work with on a regular&amp;nbsp;basis:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span&gt;C/C++ : Low level to gui&amp;nbsp;level&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Web: Nodejs, php, html, css, js, sql,&amp;nbsp;phpmyadmin&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Java: Including awt and&amp;nbsp;swing&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Java: Netbeans, glassfish :( , j2ee, jersey,&amp;nbsp;tomcat&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Miscellaneous: Can range from Photoshop to python, anything
    thats of&amp;nbsp;interest&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;&lt;span&gt;I realize for a optimum performance I will need to setup some
tools on client as well. But it will be minimum. Only what is absolutely
required. Setting up environment for java will be a problem, our current
work method requires a &lt;span class="caps"&gt;GUI&lt;/span&gt;, Netbeans and glassfish; all resource hogs. I
might use vagrant for further automation or manually setup Virtualbox
and take a snapshot of the machine at the ideal state.&lt;/span&gt;&lt;br&gt;
&lt;div&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;More to come&amp;nbsp;later.&lt;/span&gt;&lt;/p&gt;</content><category term="computers"></category><category term="Linux"></category><category term="tmux"></category><category term="virtual box"></category><category term="virtual machines"></category><category term="vm"></category></entry><entry><title>Mounting a NFS partition</title><link href="https://abstatic.github.io/2014/02/24/mounting-a-nfs-partition/" rel="alternate"></link><published>2014-02-24T14:26:00+05:30</published><updated>2014-02-24T14:26:00+05:30</updated><author><name>Abhishek Shrivastava</name></author><id>tag:abstatic.github.io,2014-02-24:/2014/02/24/mounting-a-nfs-partition/</id><summary type="html">&lt;p&gt;In this post I discuss how to setup a Network File&amp;nbsp;System&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;span class="caps"&gt;NFS&lt;/span&gt; is network file system. It is a type of partition which allows you
to store off your data into different physical computers which are
connected via &lt;span class="caps"&gt;LAN&lt;/span&gt;. This is what adds to the appeal of &lt;span class="caps"&gt;NFS&lt;/span&gt; and makes it so
different from other &lt;span class="caps"&gt;FS&lt;/span&gt; types. It allows the system administrator by
availing the same &lt;span class="caps"&gt;FS&lt;/span&gt; to be mounted off in different&amp;nbsp;machines.  &lt;/p&gt;
&lt;p&gt;So you can see why &lt;span class="caps"&gt;NFS&lt;/span&gt; is so cool. Just imagine having your same home
directory on all of your machines , and that too without needing extra
disk space&amp;nbsp;!  &lt;/p&gt;
&lt;p&gt;Setting up &lt;span class="caps"&gt;NFS&lt;/span&gt; is pretty easy too. To setup up &lt;span class="caps"&gt;NFS&lt;/span&gt; you need atleast one
server and one client. I used Fedora 20, as my server and a CentOS 6.5
based &lt;span class="caps"&gt;VM&lt;/span&gt; as my client. to be honest it took me nearly 5 hours to
configure &lt;span class="caps"&gt;NFS&lt;/span&gt; on these&amp;nbsp;machines.  &lt;/p&gt;
&lt;p&gt;First of all you need to install the packages  for &lt;span class="caps"&gt;NFS&lt;/span&gt; on both of the
machines. To do that you would&amp;nbsp;execute  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo yum install nfs-utils nfs-utils-lib
sudo yum install portmap (not required with NFSv4)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now start the services&amp;nbsp;by:-  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;service nfs start
service rpcbind start
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You might be thinking why do we  need to start the &lt;span class="caps"&gt;RPC&lt;/span&gt; (Remote
Procedure Call) service ? Its because its the backbone of &lt;span class="caps"&gt;NFS&lt;/span&gt; suite. All
of its services are provided via the help of &lt;span class="caps"&gt;RPC&lt;/span&gt;.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Setting up the &lt;span class="caps"&gt;NFS&lt;/span&gt;&amp;nbsp;server:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;After that you need to edit your /etc/exports file on your server. This
file contains the information about what directories the server will
share via &lt;span class="caps"&gt;NFS&lt;/span&gt; and with whom it will share. You need to be the super user
to edit the exports&amp;nbsp;file.  &lt;/p&gt;
&lt;p&gt;The syntax of an exports file entry looks like&amp;nbsp;this  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;directory client-ip(Permissions)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;Example: /home/xxx/music 172.164.145.555(rw,no\_root\_squash,sync)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;In the above example, there is a directory in &lt;strong&gt;/&lt;/strong&gt; partition named
“&lt;strong&gt;nfsshare&lt;/strong&gt;” is being shared with client &lt;span class="caps"&gt;IP&lt;/span&gt; “172.164.145.555&amp;#8221; with
&lt;strong&gt;read&lt;/strong&gt; and &lt;strong&gt;write&lt;/strong&gt; (&lt;strong&gt;rw&lt;/strong&gt;) privilege, you can also use &lt;strong&gt;hostname&lt;/strong&gt;
of the client in the place of &lt;strong&gt;&lt;span class="caps"&gt;IP&lt;/span&gt;&lt;/strong&gt; in above&amp;nbsp;example.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class="caps"&gt;NFS&lt;/span&gt;&amp;nbsp;Options&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Some other options we can use in “&lt;strong&gt;/etc/exports&lt;/strong&gt;” file for file
sharing is as&amp;nbsp;follows:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;ro&lt;/strong&gt;: With the help of this option we can provide &lt;strong&gt;read only
    access&lt;/strong&gt; to the shared files i.e &lt;strong&gt;client&lt;/strong&gt; will only be able to
    &lt;strong&gt;read&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;rw&lt;/strong&gt;: This option allows the &lt;strong&gt;client server&lt;/strong&gt; to both &lt;strong&gt;read&lt;/strong&gt;
    and &lt;strong&gt;write&lt;/strong&gt; access within the shared&amp;nbsp;directory.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;sync&lt;/strong&gt;: Sync confirms requests to the shared directory only once
    the &lt;strong&gt;changes&lt;/strong&gt; have been&amp;nbsp;committed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;no_subtree_check&lt;/strong&gt;: This option prevents the &lt;strong&gt;subtree&lt;/strong&gt;
    checking. When a shared directory is the subdirectory of a larger
    file system, &lt;strong&gt;nfs&lt;/strong&gt; performs scans of every directory above it, in
    order to verify its permissions and details. Disabling the
    &lt;strong&gt;subtree&lt;/strong&gt; check may increase the reliability of &lt;strong&gt;&lt;span class="caps"&gt;NFS&lt;/span&gt;&lt;/strong&gt;, but
    reduce &lt;strong&gt;security&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;no_root_squash&lt;/strong&gt;: This phrase allows &lt;strong&gt;root&lt;/strong&gt; to &lt;strong&gt;connect&lt;/strong&gt; to
    the designated directory. Be careful though, sometimes you might not
    want to give root&amp;nbsp;access.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For more options with “&lt;strong&gt;/etc/exports&lt;/strong&gt;“, you are recommended to read
the &lt;strong&gt;man pages&lt;/strong&gt; for &lt;strong&gt;export&lt;/strong&gt;.  &lt;/p&gt;
&lt;p&gt;Now, if your server is a fedora machine then you also need to follow
these additional&amp;nbsp;steps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Add the list of allowed clients in your &lt;em&gt;/etc/hosts.allow&lt;/em&gt; file. The syntax for addition in this file is:&lt;br&gt;
&lt;code&gt;name-of-service clients_allowed_ip&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;In my configuration I had the following&amp;nbsp;entries  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;portmap&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ALL&lt;/span&gt;  
&lt;span class="n"&gt;rpc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;mountd&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ALL&lt;/span&gt;  
&lt;span class="n"&gt;rpc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;nfsd&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ALL&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here the &lt;span class="caps"&gt;ALL&lt;/span&gt; keyword indicates that everyone can access these&amp;nbsp;services.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After setting up the hosts.allow file. We need to configure nfs
    config file stored in &lt;em&gt;/etc/sysconfig/nfs&lt;/em&gt;&lt;br&gt;
   In this config files we need to explicitely specify what ports will
    be used in &lt;span class="caps"&gt;NFS&lt;/span&gt;.  &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All in all, your nfs config file must have the following entries&amp;nbsp;(uncommented)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    MOUNTD_PORT=892               
    STATD_PORT=662                          
    STATD_OUTGOING_PORT=2020  
    LOCKD_TCPPORT=32803              
    LOCKD_UDPPORT=32769
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Now we need to deal with the overhelpful firewall of fedora. We need to adjust the iptables such that the ports used in &lt;span class="caps"&gt;NFS&lt;/span&gt; are&amp;nbsp;open.   &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To do that, fire up your firewall &lt;span class="caps"&gt;GUI&lt;/span&gt; daemon, and add ports
    2049(&lt;span class="caps"&gt;NFS&lt;/span&gt;) and 111(&lt;span class="caps"&gt;RPC&lt;/span&gt;) as open ports. You need to open these ports
    to &lt;span class="caps"&gt;TCP&lt;/span&gt; as well as &lt;span class="caps"&gt;UDP&lt;/span&gt;&amp;nbsp;protocols.  &lt;/p&gt;
&lt;p&gt;After this we need to edit the iptables file. Generally its found in
    &lt;em&gt;/etc/sysconfig/&lt;/em&gt;  &lt;/p&gt;
&lt;p&gt;Add the following entries to your iptables&amp;nbsp;file:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   -A INPUT -m state --state NEW -m udp -p udp --dport 2049 -j ACCEPT     
   -A INPUT -m state --state NEW -m tcp -p tcp --dport 2049 -j ACCEPT  
   -A INPUT -m state --state NEW -m udp -p udp --dport 111 -j ACCEPT 
   -A INPUT -m state --state NEW -m tcp -p tcp --dport 111 -j ACCEPT   
   -A INPUT -m state --state NEW -m udp -p udp --dport 892 -j ACCEPT       
   -A INPUT -m state --state NEW -m tcp -p tcp --dport 892 -j ACCEPT         
   -A INPUT -m state --state NEW -m udp -p udp --dport 875 -j ACCEPT       
   -A INPUT -m state --state NEW -m tcp -p tcp --dport 875 -j ACCEPT         
   -A INPUT -m state --state NEW -m udp -p udp --dport 662 -j ACCEPT       
   -A INPUT -m state --state NEW -m tcp -p tcp --dport 662 -j ACCEPT 
   -A INPUT -m state --state NEW -m tcp -p tcp --dport 32803 -j ACCEPT     
   -A INPUT -m state --state NEW -m udp -p udp --dport 32769 -j ACCEPT
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Now restart your firewall by:&lt;br&gt;
&lt;code&gt;service iptables restart&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;And we&amp;#8217;re done ! , With the Server configuration of course&amp;nbsp;:P&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;u&gt;Setting up the &lt;span class="caps"&gt;NFS&lt;/span&gt; client&lt;/u&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;After configuring the &lt;strong&gt;&lt;span class="caps"&gt;NFS&lt;/span&gt;&lt;/strong&gt; server, we need to &lt;strong&gt;mount&lt;/strong&gt; that shared
directory or partition in the &lt;strong&gt;client&lt;/strong&gt;&amp;nbsp;server.  &lt;/p&gt;
&lt;h4&gt;Mount Shared Directories on &lt;span class="caps"&gt;NFS&lt;/span&gt;&amp;nbsp;Client&lt;/h4&gt;
&lt;p&gt;Now at the &lt;strong&gt;&lt;span class="caps"&gt;NFS&lt;/span&gt; client&lt;/strong&gt; end, we need to &lt;strong&gt;mount&lt;/strong&gt; that directory in
our server to access it locally. To do so, first we need to find out
that shares available on the remote server or &lt;span class="caps"&gt;NFS&lt;/span&gt;&amp;nbsp;Server.  &lt;/p&gt;
&lt;p&gt;showmount -e 192.168.0.100
Export list for 192.168.0.100:/nfsshare&amp;nbsp;192.168.0.101&lt;/p&gt;
&lt;p&gt;Now, create the directory that will contain the &lt;span class="caps"&gt;NFS&lt;/span&gt; shared&amp;nbsp;files   &lt;/p&gt;
&lt;p&gt;&lt;code&gt;mkdir -p /mnt/nfs/home&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Now at the &lt;strong&gt;&lt;span class="caps"&gt;NFS&lt;/span&gt; client&lt;/strong&gt; end, we need to &lt;strong&gt;mount&lt;/strong&gt; that directory in
our server to access it locally. To do so, first we need to find out
that shares available on the remote server or &lt;span class="caps"&gt;NFS&lt;/span&gt;&amp;nbsp;Server.   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;showmount -e 192.168.0.100
&amp;gt;&amp;gt;Export list for 192.168.0.100:/nfsshare 192.168.0.101
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then go ahead and mount&amp;nbsp;it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mount &amp;lt;ip-address_of_host&amp;gt;:&amp;lt;directory_in_exportsfile&amp;gt; &amp;lt;where_to_mount&amp;gt;
Example: mount 12.34.56.789:/home /mnt/nfs/home
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you are having problems then try stopping your firewall daemon by&amp;nbsp;using  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;service iptables stop&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If all goes well then you will be able to access all the information
stored in your&amp;nbsp;server.&lt;/p&gt;</content><category term="nfs"></category><category term="partition"></category><category term="linux"></category><category term="networks"></category></entry><entry><title>The Magic Of Wget.</title><link href="https://abstatic.github.io/2013/06/23/the-magic-of-wget/" rel="alternate"></link><published>2013-06-23T10:28:00+05:30</published><updated>2013-06-23T10:28:00+05:30</updated><author><name>Abhishek Shrivastava</name></author><id>tag:abstatic.github.io,2013-06-23:/2013/06/23/the-magic-of-wget/</id><summary type="html">&lt;p&gt;Tutorial on using wget for&amp;nbsp;downloading&lt;/p&gt;</summary><content type="html">&lt;p&gt;What if you could download all the &amp;#8220;non-downloadable&amp;#8221; content on internet&amp;nbsp;?,&lt;/p&gt;
&lt;p&gt;Or What if you could save a  full website on your &lt;span class="caps"&gt;PC&lt;/span&gt; ? , Or What if you
could extract all those images from a webpage/website  ? Cool , isn&amp;#8217;t it&amp;nbsp;?&lt;/p&gt;
&lt;p&gt;Comrades, Wget is the key to all of your problems !
Written in C , this command line download manager can easily satisfy all your
download needs. You can download literally anything using Wget. And the
silver lining is , its cross-platform , meaning it can work seamlessly
with any &lt;span class="caps"&gt;OS&lt;/span&gt;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Downloading a single file:&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;wget &amp;lt;URL&amp;gt;&lt;/code&gt; - Downloading file by above method stores your &lt;span class="caps"&gt;URL&lt;/span&gt; , which may be a webpage or any
type of file in your current working&amp;nbsp;directory.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Downloading the file and store with a different name &lt;span class="caps"&gt;OR&lt;/span&gt; location:&lt;/strong&gt; We use -O to
do that. By default wget will pick the filename from the last word after
last forward&amp;nbsp;slash.  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;wget -O &amp;lt;Desired file name&amp;gt; &amp;lt;URL&amp;gt;&lt;/code&gt;&lt;br&gt;
Above will download the &lt;span class="caps"&gt;URL&lt;/span&gt; with your desired filename to . (Current working&amp;nbsp;directory.)  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;wget -P &amp;lt;Desired file location&amp;gt; &amp;lt;URL&amp;gt;&lt;/code&gt;&lt;br&gt;
Above will download the &lt;span class="caps"&gt;URL&lt;/span&gt; to your desired location.If the desired location
does not exist , then specified directory will be&amp;nbsp;created.&lt;/li&gt;
&lt;li&gt;If you want to change the file name and store it in a user
defined location then you&amp;#8217;ll have to be a little more specific, you
cannot use -P and -O in a single command , you&amp;#8217;ll need to use something
like this- &lt;ul&gt;
&lt;li&gt;&lt;code&gt;wget -O /home/mautbaba/Desktop/ &amp;lt;filename.filetype&amp;gt; &amp;lt;URL&amp;gt;&lt;/code&gt; This will download your filename.filetype to your&amp;nbsp;desktop&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Specifying Download Speed:&lt;/strong&gt; While executing wget , by default wget will hijack
all of your bandwidth which can be undesirable in certain situations and
networks. We use &amp;#8212;limit-rate to control download&amp;nbsp;speed.  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;wget --limit-rate=200k &amp;lt;URL&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Continue Incomplete Download:&lt;/strong&gt; What if your download gets interrupted ? ,
Well there&amp;#8217;s fix for that too, you can always continue your incomplete
downloads by adding -c parameter.&lt;ul&gt;
&lt;li&gt;&lt;code&gt;wget -c &amp;lt;URL&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Background Downloading:&lt;/strong&gt; For downloading huge files , you can also put wget to
download in background.&lt;ul&gt;
&lt;li&gt;&lt;code&gt;wget -b &amp;lt;URL&amp;gt;&lt;/code&gt;
    -Above will initiate the download and give back &lt;span class="caps"&gt;BASH&lt;/span&gt; to you. You can also see
    progress of your download using : &lt;code&gt;tail -f wget-log&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Download A Full Site:&lt;/strong&gt; Wget can also download a full website for local viewing.
It can make the site completely offline and even convert all the&amp;nbsp;links.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;wget --mirror -p --convert-links -P ./&amp;lt;DIRECTORY&amp;gt; &amp;lt;URL&amp;gt;&lt;/code&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; --mirror       : Turns on the options suitable for mirroring.  
  -p            : Download all files that are necessary to properly display a given HTML page.  
--convert-links : After download convert links in document for local viewing.  
 -P ./&amp;amp;lt;LOCATION&amp;amp;gt;: Save all files and directories to specified directory.
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Download multiple files:&lt;/strong&gt; You can download multiple files (Maybe mp3s, images) at one go using wget, all you need is the &lt;span class="caps"&gt;URL&lt;/span&gt;.
First store all download URLs into a text file , lets say its download.txt&lt;br&gt;
Then, give download.txt as an argument using wget&amp;nbsp;-i  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;wget -i download.txt&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Download only certain file types from a webpage/website:&lt;/strong&gt; Wget can also be used to download all videos, images, PDFs from a&amp;nbsp;website.  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;wget -r -A. &amp;lt;filetype&amp;gt; URL&lt;/code&gt;
You may also use wget to reject certain filetypes while downloading, the
syntax would be&amp;nbsp;:  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;wget --reject=&amp;lt;filetype&amp;gt; URL&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class="caps"&gt;FTP&lt;/span&gt; Download with wget:&lt;/strong&gt; You can also download files from &lt;span class="caps"&gt;FTP&lt;/span&gt; using&amp;nbsp;wget.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Download files as &amp;#8220;Anonymous User&amp;#8221; :&lt;ul&gt;
&lt;li&gt;&lt;code&gt;wget &amp;lt;FTP-URL&amp;gt;&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Download files with user-name and password authentication :-  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;wget --ftp-user=USERNAME --ftp-password=PASSWORD &amp;lt;FTP-URL&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Increase Total Retry Attempts:&lt;/strong&gt; By default wget retries 20 times before giving up on a download , you can change it&amp;nbsp;by &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;wget --tries=75 &amp;lt;URL&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="LAMP"></category><category term="wget"></category><category term="linux"></category><category term="downloading"></category></entry><entry><title>30 Reasons Why Linux Is Better Than Windows</title><link href="https://abstatic.github.io/2013/06/15/30-reasons-why-linux-is-better-than-windows/" rel="alternate"></link><published>2013-06-15T17:06:00+05:30</published><updated>2013-06-15T17:06:00+05:30</updated><author><name>Abhishek Shrivastava (xabhishekflyhigh@gmail.com)</name></author><id>tag:abstatic.github.io,2013-06-15:/2013/06/15/30-reasons-why-linux-is-better-than-windows/</id><summary type="html">&lt;p&gt;Why Linux is so much better than windows&amp;nbsp;?&lt;/p&gt;</summary><content type="html">&lt;p&gt;Have you ever wondered why so many devs prefer linux over windows , or
What exactly makes linux  better than other operating systems&amp;nbsp;?  &lt;/p&gt;
&lt;p&gt;Take a look  below to know&amp;nbsp;why.  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Its free&lt;/strong&gt; ! Contrary to windows and other &lt;span class="caps"&gt;OS&lt;/span&gt; linux is completely free, you can download it off the  net and install it, share it and
that, my friend, is perfectly legal, no headaches about&amp;nbsp;licensing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;No viruses or spywares.&lt;/strong&gt; Even Bill Gates cannot cure windows of its viruses, but linux on other hand rarely gets infected with viruses or spywares.Tight security is a core functionality in a linux &lt;span class="caps"&gt;PC&lt;/span&gt; and the number of viruses in linux is astronomically lower than&amp;nbsp;windows.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Say goodbye to disk fragmentation.&lt;/strong&gt; Linux&amp;#8217;s filesystem works very efficiently. Unlike &lt;span class="caps"&gt;FAT&lt;/span&gt; or &lt;span class="caps"&gt;NTFS&lt;/span&gt; it stores data in middle of a &lt;span class="caps"&gt;HDD&lt;/span&gt; sector, so you can append to any file as you please. Without worrying about disk&amp;nbsp;fragmentation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;It &lt;span class="caps"&gt;DOES&lt;/span&gt; &lt;span class="caps"&gt;NOT&lt;/span&gt; crash&lt;/strong&gt; without any apparent reasons because the &lt;span class="caps"&gt;GUI&lt;/span&gt;(pronounced gew-ee) and the core operating system(the kernel) are completely independent and do not affect each&amp;nbsp;other.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It &lt;strong&gt;doesn&amp;#8217;t require re-installation.&lt;/strong&gt;unless there is a &lt;span class="caps"&gt;HDD&lt;/span&gt; failure. By creating a separate /home partition user data can be preserved even in case of&amp;nbsp;reinstallation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It &lt;strong&gt;doesn&amp;#8217;t require frequent re-booting&lt;/strong&gt; even if you change settings or install any&amp;nbsp;application.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Linux can read &lt;strong&gt;over 1000&amp;nbsp;filesystems.&lt;/strong&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Its open source , so you can modify it the way you want and maybe release your own&amp;nbsp;distro.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The shell prompt of linux known as &lt;span class="caps"&gt;BASH&lt;/span&gt; is very powerful and entire
system administration can be done using&amp;nbsp;it.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Unlike windows you can install it on any type of partition of your
&lt;span class="caps"&gt;HDD&lt;/span&gt; be it primary or&amp;nbsp;logical.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;No one can monitor your activities&lt;/strong&gt;on linux unless you want them
to , did you know all versions of windows come preloaded with a backdoor
so that the &lt;span class="caps"&gt;US&lt;/span&gt; &lt;span class="caps"&gt;NSA&lt;/span&gt; can monitor your activities and&amp;nbsp;data.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Linux doesn&amp;#8217;t use registry&lt;/strong&gt;, hence no registry corruption! Most
of the configuration is stored on plain text&amp;nbsp;files  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can even run linux from a &lt;strong&gt;&lt;span class="caps"&gt;LIVE&lt;/span&gt; &lt;span class="caps"&gt;CD&lt;/span&gt;&lt;/strong&gt; , without ever having the
need to install it permanently on your hard&amp;nbsp;drive.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Contrary to popular belief linux supports insane amount of
hardwares , in windows you have to install the drivers for almost&amp;nbsp;everything.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The user support in linux is very wide and the online forums are
extremely active , once you get started **its like one huge&amp;nbsp;family. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Moreover being open source it has very less number of bugs , and
if any &lt;strong&gt;bug does occur it is fixed within &lt;span class="caps"&gt;HOURS&lt;/span&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;No frequent hardware upgrades&lt;/strong&gt; are required in case of linux.It
can run happily on older hardware and the hardware requirements don&amp;#8217;t
increase with every new&amp;nbsp;release.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Light On System Resources.&lt;/strong&gt; Linux is super light on your system resources and you can utilize the full power of your&amp;nbsp;machine.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Best Development Platform.&lt;/strong&gt; Most of the compilers are built-in, you don&amp;#8217;t need to install anything&amp;nbsp;extra.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Excellent package management system.&lt;/strong&gt; You can install all softwares in just a few clicks , that too for free and moreover they are very easy to&amp;nbsp;upgrade.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The default graphics are real eye candy something windows can never
acheive.The desktop effects are simply&amp;nbsp;amazing!  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Multiple Desktops.&lt;/strong&gt;This is obviously one of my fav. parts of linux. Ever linux distro has multiple desktops which makes it very easy
to multitask.
Multiple desktops make it easy to have many programs open at once but
provides system resources only to the ones you are currently&amp;nbsp;using.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Linux is &lt;strong&gt;highly customisable&lt;/strong&gt;you can use different window
managers like Gnome , &lt;span class="caps"&gt;KDE&lt;/span&gt; , Unity &lt;br&gt;
You can even define your own custom shortcuts!   &lt;br&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You are in total control of your system.There are no hidden
applications/processes. You can   always decide which process will start
when the kernel&amp;nbsp;starts.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;With the help of clients like Empathy and gwibber you can **satisfy
all of your social networking needs right from your&amp;nbsp;desktop.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;All linux softwares are generally written in C therefore they are
considerably more stable and powerful as compared to other&amp;nbsp;softwares.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Every distro has its own included appstore which provides you
access to thousands of verified softwares and the silver lining is its all&amp;nbsp;free!  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Browsing is not only more secure but considerably faster on linux. It also saves a lot of&amp;nbsp;bandwidth.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Linux plays friends with other &lt;span class="caps"&gt;OS&lt;/span&gt;. It recognizes many &lt;span class="caps"&gt;OS&lt;/span&gt; and lets you access/edit their files with great&amp;nbsp;flexibility.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;All servers and super computers are linux based. You can have any no. of processors , and literally any amount of hardware , linux will
recognize it and put it to full use. Whereas windows just cannot scale up to that&amp;nbsp;level  &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="LAMP"></category></entry></feed>